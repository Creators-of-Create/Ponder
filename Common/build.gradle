plugins {
    id "net.neoforged.moddev" version "${mdg_version}"
}

apply from: "../gradle/property_helper.gradle"

archivesBaseName = "${mod_name}-Common-${minecraft_version}"

neoForge {
    neoFormVersion = neo_form_version

    accessTransformers.from(file('src/main/resources/META-INF/ponder.accesstransformer.cfg').absolutePath)

    parchment {
        minecraftVersion = parchment_minecraft_version
        mappingsVersion = parchment_version
    }
}

dependencies {
    compileOnly "dev.engine-room.flywheel:flywheel-common-mojmap-api-${minecraft_version}:${flywheel_version}"

    compileOnly "net.fabricmc:sponge-mixin:0.15.4+mixin.0.8.7"
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.4.1"))

    compileOnly ":ForgeConfigAPIPort-v21.1.3-1.21.1-Fabric-dev"
    implementation "fuzs.forgeconfigapiport:forgeconfigapiport-common-neoforgeapi:${forgeconfigapiport_version}" //source: https://github.com/Fuzss/forgeconfigapiport

}

java {
    withJavadocJar()
    withSourcesJar()
}

jar {
    exclude "net/neoforged/fml/config/**"
}

// -- MAVEN PUBLISHING --
project.publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.archivesBaseName

            from components.java
            /*// Base mod archive.
            artifact jar

            // Adds the sources as an artifact.
            artifact project.sourcesJar {
                 classifier "sources"
            }

            // Adds the javadocs as an artifact.
            artifact project.javadocJar {
                classifier "javadoc"
            }*/
        }
    }

    repositories {
        maven {
            // Sets maven credentials if they are provided. This is generally
            // only used for external/remote uploads.
            if (project.hasProperty("mavenUsername") && project.hasProperty("mavenPassword")) {

                credentials {

                    username findProperty("mavenUsername")
                    password findProperty("mavenPassword")
                }
            }

            url getDefaultString("mavenURL", "undefined", true)
        }
    }
}
